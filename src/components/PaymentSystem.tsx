import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { 
  CreditCard, 
  Smartphone, 
  Banknote, 
  Shield, 
  CheckCircle,
  ArrowRight,
  Wallet
} from 'lucide-react';
import { PaymentMethod } from '@/types';

const paymentMethods: PaymentMethod[] = [
  {
    id: 'sbp',
    name: '–°–ë–ü',
    icon: 'üè¶',
    description: '–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π'
  },
  {
    id: 'card',
    name: '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞',
    icon: 'üí≥',
    description: 'Visa, MasterCard, –ú–ò–†'
  },
  {
    id: 'qiwi',
    name: 'QIWI',
    icon: 'ü•ù',
    description: 'QIWI –∫–æ—à–µ–ª–µ–∫'
  },
  {
    id: 'yoomoney',
    name: '–ÆMoney',
    icon: 'üí∞',
    description: '–Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏'
  },
  {
    id: 'webmoney',
    name: 'WebMoney',
    icon: 'üî∑',
    description: 'WebMoney –∫–æ—à–µ–ª–µ–∫'
  },
  {
    id: 'paypal',
    name: 'PayPal',
    icon: 'üåê',
    description: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏'
  }
];

interface PaymentSystemProps {
  amount: number;
  currency: string;
  serviceName: string;
  onPayment: (method: PaymentMethod) => void;
}

export const PaymentSystem: React.FC<PaymentSystemProps> = ({
  amount,
  currency,
  serviceName,
  onPayment
}) => {
  const [selectedMethod, setSelectedMethod] = useState<PaymentMethod | null>(null);
  const [isProcessing, setIsProcessing] = useState(false);

  const handlePayment = async () => {
    if (!selectedMethod) return;
    
    setIsProcessing(true);
    
    // –°–∏–º—É–ª–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    setTimeout(() => {
      setIsProcessing(false);
      onPayment(selectedMethod);
    }, 2000);
  };

  return (
    <div className="max-w-2xl mx-auto space-y-6">
      <div className="text-center">
        <h2 className="text-2xl font-bold text-foreground mb-2">–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞</h2>
        <p className="text-muted-foreground">–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</p>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
      <Card className="p-6">
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <span className="text-foreground">–£—Å–ª—É–≥–∞:</span>
            <span className="font-semibold">{serviceName}</span>
          </div>
          
          <Separator />
          
          <div className="flex items-center justify-between text-lg">
            <span className="font-semibold text-foreground">–ö –æ–ø–ª–∞—Ç–µ:</span>
            <span className="font-bold text-primary text-xl">
              {amount} {currency}
            </span>
          </div>
        </div>
      </Card>

      {/* –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã */}
      <Card className="p-6">
        <h3 className="text-lg font-semibold text-foreground mb-4">
          –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
          {paymentMethods.map((method) => (
            <motion.div
              key={method.id}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
            >
              <Card
                className={`p-4 cursor-pointer transition-all border-2 ${
                  selectedMethod?.id === method.id
                    ? 'border-primary bg-primary/10'
                    : 'border-border hover:border-primary/50'
                }`}
                onClick={() => setSelectedMethod(method)}
              >
                <div className="flex items-center gap-3">
                  <div className="text-2xl">{method.icon}</div>
                  <div className="flex-1">
                    <div className="font-medium text-foreground">
                      {method.name}
                    </div>
                    <div className="text-sm text-muted-foreground">
                      {method.description}
                    </div>
                  </div>
                  {selectedMethod?.id === method.id && (
                    <CheckCircle className="w-5 h-5 text-primary" />
                  )}
                </div>
              </Card>
            </motion.div>
          ))}
        </div>

        {/* –°–ë–ü –≤—ã–¥–µ–ª—è–µ–º –æ—Å–æ–±–æ */}
        <div className="mt-4 p-4 bg-primary/5 rounded-lg border border-primary/20">
          <div className="flex items-center gap-2 mb-2">
            <div className="text-xl">üè¶</div>
            <Badge variant="default" className="text-xs">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</Badge>
          </div>
          <div className="text-sm text-muted-foreground">
            <strong>–°–ë–ü</strong> - —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã. 
            –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏.
          </div>
        </div>
      </Card>

      {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
      {selectedMethod && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3 }}
        >
          <Card className="p-6">
            <div className="space-y-4">
              <div className="flex items-center justify-center gap-2 text-muted-foreground">
                <Shield className="w-4 h-4" />
                <span className="text-sm">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</span>
              </div>
              
              <Button
                className="w-full py-6 text-lg"
                onClick={handlePayment}
                disabled={isProcessing}
              >
                {isProcessing ? (
                  <div className="flex items-center gap-2">
                    <div className="animate-spin rounded-full h-4 w-4 border-2 border-current border-t-transparent" />
                    –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...
                  </div>
                ) : (
                  <div className="flex items-center gap-2">
                    <span>–û–ø–ª–∞—Ç–∏—Ç—å {amount} {currency}</span>
                    <ArrowRight className="w-4 h-4" />
                  </div>
                )}
              </Button>
              
              <div className="text-center">
                <p className="text-xs text-muted-foreground">
                  –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏—Ç—å", –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                </p>
              </div>
            </div>
          </Card>
        </motion.div>
      )}
    </div>
  );
};